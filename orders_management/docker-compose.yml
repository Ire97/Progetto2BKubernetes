version: '3.8'

x-mongo-secrets: &mongo-credentials
  MONGO_INITDB_DATABASE: admin
  MONGO_INITDB_ROOT_USERNAME: root
  MONGO_INITDB_ROOT_PASSWORD: toor
  MONGODB_HOSTNAME: orders-service-db
  MONGODB_PORT: 27017
  KAFKA_GROUP_ID: group-consumer
  KAFKA_ADDRESS: kafka:9092
  KAFKA_TOPIC_LOGGING: "logging"
  KAFKA_TOPIC_ORDERS: "orders"
  KAFKA_TOPIC_NOTIFICATION: "notification"
  KAFKA_TOPIC_INVOICING: "invoicing"

x-kafka-env: &kafka-env
  KAFKA_BROKER_ID: 1
  KAFKA_ADVERTISED_PORT: 9092
  BROKER_ID_COMMAND: "hostname | cut -d'-' -f2"
  KAFKA_ZOOKEEPER_CONNECT: "zoo:2181"
  KAFKA_LISTENERS: "PLAINTEXT://:9092"
  #KAFKA_CREATE_TOPICS: "logging:20:1,pushnotifications:10:1,invoicing:10:1,mailing:10:1,userupdates:10:1,orderupdates:10:1"


services:
  orders-service-db:
    image: mongo
    restart: always
    environment:
     MONGO_INITDB_ROOT_USERNAME: root
     MONGO_INITDB_ROOT_PASSWORD: toor
    ports:
      - 27017:27017
    volumes:
      - mongo-db-data:/data/db

  orders_management:
    image: ire97/orders_management:v9
    ports:
      - 8080:8080
    restart: always
    environment:
      *mongo-credentials

  #fake_producer:
  #  build:
  #    context: .
  #    dockerfile: fake_producer/Dockerfile
  #  ports:
  #    - 8089:8080
  #  restart: always
    #command: tail -f /dev/null

  zoo:
    image: library/zookeeper:3.4.13
    environment:
     ZOO_MY_ID: 1
    restart: always

  kafka:
    environment: *kafka-env
    image: wurstmeister/kafka:2.11-2.0.0
    restart: always
    ports:
      - 9092:9092


volumes:
  mongo-db-data: